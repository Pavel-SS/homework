{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","Error404","Message","props","className","src","avatar","alt","name","message","time","messageData","HW1","Affair","style","affair_name","affair","affair_priority","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","i","filterAffairs","deleteAffair","Greeting","setNameCallback","onKeyPressHandler","addUser","error","totalUsers","inputClass","s","correct","value","onChange","onKeyPress","button","disabled","error_message","GreetingContainer","users","addUserCallback","setName","setError","nameTrim","trim","alert","length","e","currentTarget","key","HW3","setUsers","userName","newUser","v1","newUserList","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","RoutesFunc","to","path","element","HW5","Routes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,QAAU,0BAA0B,cAAgB,gCAAgC,OAAS,2B,gBCA/ID,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,kBCAhKD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,gBAAkB,mC,gBCA/ED,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,gBCAxFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,gBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,iBCA7ED,EAAOC,QAAU,CAAC,0BAA0B,uC,mJCS7BC,MARf,WACI,OACI,gDCQOC,MAVf,WACI,OACI,gCACI,sCACA,kDACA,uF,MCsBGC,MAlBf,SAAiBC,GACb,OACI,sBAAKC,UAAU,qBAAf,UACQ,qBAAKA,UAAU,kBAAkBC,IAAKF,EAAMG,OAAQC,IAAI,QAE5D,sBAAKH,UAAU,iBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,mBAAGA,UAAU,sBAAb,SAAoCD,EAAMK,OAC1C,mBAAGJ,UAAU,qBAAb,SAAmCD,EAAMM,aAE7C,qBAAKL,UAAU,gBAAf,SACMD,EAAMO,cCnBtBC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QA0BKC,MAvBf,WACI,OACI,gCACI,uBADJ,cAMI,cAAC,EAAD,CACGN,OAAQK,EACRH,KAAMG,EACNF,QAASE,EACTD,KAAMC,IAGT,uBAGA,2B,wBCJGE,MAdf,SAAgBV,GAKZ,OACI,gCACI,sBAAMC,UAAWU,IAAMC,YAAvB,SAAqCZ,EAAMa,OAAOR,OAClD,sBAAMJ,UAAWU,IAAMG,gBAAvB,SAAyCd,EAAMa,OAAOE,WACtD,wBAAQC,QARO,WACnB,OAAOhB,EAAMiB,qBAAqBjB,EAAMa,OAAOK,MAO3C,mBCwBGC,MAjCf,SAAiBnB,GACb,IAAMoB,EAAgBpB,EAAMqB,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIV,OAAQU,EACRN,qBAAsBjB,EAAMiB,sBAFvBM,EAAEL,QAmBf,OACI,gCACKE,EACD,wBAAQJ,QAhBD,WACX,OAAOhB,EAAMwB,UAAU,QAenB,iBACA,wBAAQR,QAdA,WACZ,OAAOhB,EAAMwB,UAAU,SAanB,kBACA,wBAAQR,QAZE,WACd,OAAOhB,EAAMwB,UAAU,WAWnB,oBACA,wBAAQR,QAVD,WACX,OAAOhB,EAAMwB,UAAU,QASnB,qBCzBNC,EAAoC,CACtC,CAACP,IAAK,EAAGb,KAAM,QAASU,SAAU,QAClC,CAACG,IAAK,EAAGb,KAAM,QAASU,SAAU,OAClC,CAACG,IAAK,EAAGb,KAAM,QAASU,SAAU,OAClC,CAACG,IAAK,EAAGb,KAAM,OAAQU,SAAU,QACjC,CAACG,IAAK,EAAGb,KAAM,aAAcU,SAAU,WA+C5BW,MA3Bf,WAAgB,IAAD,EACmBC,mBAAuBF,GAD1C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EApBmB,SAACH,EAA4BE,GACtD,MAAe,QAAXA,EACOF,EACW,SAAXE,GAEW,WAAXA,GAEY,QAAXA,EAHDF,EAAQE,QAAO,SAAAE,GAAC,OAAEA,EAAEjB,WAAae,KAMhC,GAUYG,CAAcL,EAASE,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIT,KAAMU,EACNP,UAAWA,EACXP,qBAXiB,SAACC,GAAD,OAAiBW,EATtB,SAACD,EAA6BV,GACtD,OAAOU,EAAQE,QAAO,SAAAE,GAAC,OAAGA,EAAEd,MAAQA,KAQqBgB,CAAaN,EAASV,OAcvE,uBAGA,2B,gCChCGiB,EAf+B,SAAC,GAEzC,IADD9B,EACA,EADAA,KAAM+B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,kBAAkBC,EACzC,EADyCA,QAASC,EAClD,EADkDA,MAAOC,EACzD,EADyDA,WAEpDC,EAAaF,EAAQG,IAAEH,MAAQG,IAAEC,QAEvC,OACI,gCACI,uBAAOC,MAAOvC,EAAMwC,SAAUT,EAAiBU,WAAYT,EAAmBpC,UAAWwC,IACzF,wBAAQzB,QAASsB,EAASrC,UAAWyC,IAAEK,OAAQC,UAAW3C,EAA1D,iBACA,+BAAOmC,IACP,sBAAMvC,UAAWyC,IAAEO,cAAnB,SAAmCV,QC8BhCW,EAvCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEzB,mBAAiB,IADiD,mBACnFtB,EADmF,KAC7EgD,EAD6E,OAEhE1B,mBAAiB,IAF+C,mBAEnFY,EAFmF,KAE5Ee,EAF4E,KAYpFhB,EAAU,WACZ,IAAIiB,EAAWlD,EAAKmD,OACjBD,GACCH,EAAgBG,GAChBF,EAAQ,IACRC,EAAS,IACTG,MAAM,SAAD,OAAUF,EAAV,QAELF,EAAQ,IACRC,EAAS,8BAIXd,EAAaW,EAAMO,OAEzB,OACI,cAAC,EAAD,CACIrD,KAAMA,EACN+B,gBA1BgB,SAACuB,GACrBN,EAAQM,EAAEC,cAAchB,QA0BpBP,kBAxBkB,SAACsB,GACV,UAAVA,EAAEE,KACDvB,KAuBAA,QAASA,EACTC,MAAOA,EACPC,WAAYA,KCZTsB,MAzBf,WAAgB,IAAD,EACenC,mBAAqB,IADpC,mBACJwB,EADI,KACGY,EADH,KASX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBZ,MAAOA,EAAOC,gBAZjB,SAACY,GACrB,IAAIC,EAAU,CAAC/C,IAAKgD,cAAM7D,KAAM2D,GAC5BG,EAAW,sBAAOhB,GAAP,CAAcc,IAC7BF,EAASI,MAWL,uBAGA,2B,+BC4BGC,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPExB,EAOH,EAPGA,SAAUyB,EAOb,EAPaA,aACVxB,EAMH,EANGA,WAAYyB,EAMf,EANeA,QACZhC,EAKH,EALGA,MACAtC,EAIH,EAJGA,UAAWuE,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMhC,IAAEH,MAAR,YAAiBiC,GAAgC,IACnEG,EAAmB,UAAMjC,IAAEkC,MAAR,YAAiB3E,EAAjB,YAA8BsC,EAAQG,IAAEmC,WAAanC,IAAEoC,YAEhF,OACI,qCACI,mCACIT,KAAM,OACNxB,SArBa,SAACc,GACtBd,GACGA,EAASc,GAEZW,GAAgBA,EAAaX,EAAEC,cAAchB,QAkBrCE,WAhBe,SAACa,GACxBb,GAAcA,EAAWa,GAEzBY,GACa,UAAVZ,EAAEE,KACFU,KAYKtE,UAAW0E,GAEPF,IAEPlC,GAAS,sBAAMtC,UAAWyE,EAAjB,SAAsCnC,Q,kCC5B7CwC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK/E,EAGR,EAHQA,UACFwE,EAEN,mCACKQ,EAAc,UAAMD,EAAMtC,IAAEsC,IAAMtC,IAAEwC,QAAtB,YAAiCjF,GAErD,OACI,oCACIA,UAAWgF,GACPR,K,iBCuBDU,EAjCyC,SAAC,GASpD,EAPGd,KAOF,IANExB,EAMH,EANGA,SAAUuC,EAMb,EANaA,gBACVnF,EAKH,EALGA,UACAoF,GAIH,EALcb,cAKd,EAJGa,UAEGZ,EAEN,4FAQKE,EAAmB,UAAMjC,IAAE4C,SAAR,YAAoBrF,GAAwB,IAErE,OACI,kCACI,mCACIoE,KAAM,WACNxB,SAba,SAACc,GAEtBd,GAAYA,EAASc,GAErByB,GAAmBA,EAAgBzB,EAAEC,cAAc2B,UAU3CtF,UAAW0E,GAEPF,IAEPY,GAAY,sBAAMpF,UAAWyC,IAAE8B,cAAnB,SAAmCa,QCwC7CG,MAzEf,WAAgB,IAAD,EACa7D,mBAAiB,IAD9B,mBACJ8D,EADI,KACEC,EADF,KAELnD,EAAQkD,EAAO,GAAK,QAEpBE,EAAY,WACVpD,EACAkB,MAAM,gFAENA,MAAMgC,IARH,EAYmB9D,oBAAkB,GAZrC,mBAYJ4D,EAZI,KAYKK,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAK3F,UAAWyC,IAAEmD,OAAlB,UACI,cAAC,EAAD,CACIjD,MAAO6C,EACPnB,aAAcoB,EACdnB,QAASoB,EACTpD,MAAOA,IAIX,cAAC,EAAD,CACItC,UAAWyC,IAAEoD,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACId,KAAG,EACHhE,QAAS2E,EAFb,qBAOA,cAAC,EAAD,CAAa3C,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIuC,QAASA,EACTH,gBAAiBQ,EAFrB,wBAQA,cAAC,EAAD,CAAeL,QAASA,EAAS1C,SA/CxB,SAACc,GAAD,OAAsCiC,EAAWjC,EAAEC,cAAc2B,eAkD9E,uBAKA,2BCvDGQ,MAbf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,eCiBGC,MAnBf,WACI,OACI,gCAEI,cAAC,IAAD,CAASC,GAAI,cAAb,wBACA,eAAC,IAAD,WAKA,cAAC,IAAD,CAAOC,KAAM,cAAeC,QAAS,cAAC,EAAD,MAErC,cAAC,IAAD,CAAOA,QAAS,kBAAM,cAAC,EAAD,cCFnBC,MAff,WACI,OACI,8BAEI,eAAC,IAAD,WAEA,cAAC,EAAD,IAEA,cAACC,EAAD,UCSGC,MAbf,WACI,OACI,sBAAKrG,UAAWyC,IAAE4D,IAAlB,UACI,mDAKA,cAAC,EAAD,QCLQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAhF,GACHiF,QAAQjF,MAAMA,EAAMjC,c","file":"static/js/main.cf3d2f0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__1GDzm\",\"correct\":\"Greeting_correct__v7Nvf\",\"error_message\":\"Greeting_error_message__2qxJq\",\"button\":\"Greeting_button__2xbLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3u6Dk\",\"superInput\":\"SuperInputText_superInput__3aVQI\",\"errorInput\":\"SuperInputText_errorInput__-pwa8\",\"error\":\"SuperInputText_error__11gRJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair_name\":\"Affairs_affair_name__36sRx\",\"affair_priority\":\"Affairs_affair_priority__35v20\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__19Tp3\",\"column\":\"HW4_column__3poea\",\"testSpanError\":\"HW4_testSpanError__3742I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1A5tl\",\"red\":\"SuperButton_red__6WPAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Fr_aU\",\"spanClassName\":\"SuperCheckbox_spanClassName__3EyLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message__lower-triangle\":\"App_message__lower-triangle__1fvLN\"};","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n             add NavLinks\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport './Message.scss'\r\n\r\n\r\ntype messageData = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nfunction Message(props: messageData) {\r\n    return (\r\n        <div className=\"message__container\">\r\n                <img className=\"message__avatar\" src={props.avatar} alt=\"img\" />\r\n\r\n            <div className=\"message__block\">\r\n                <div className=\"message__descr\">\r\n                    <p className=\"message__descr_name\">{props.name}</p>\r\n                    <p className=\"message__descr_txt\">{props.message}</p>\r\n                </div>\r\n                <div className=\"message__time\">\r\n                     {props.time}   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n               avatar={messageData.avatar}\r\n               name={messageData.name}\r\n               message={messageData.message}\r\n               time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport { AffairType } from './HW2'\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id:number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        return props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            <span className={style.affair_name}>{props.affair.name}</span> \r\n            <span className={style.affair_priority}>{props.affair.priority}</span>\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType)=>void\r\n    deleteAffairCallback: (id:number)=> void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        return props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        return props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        return props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        return props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = string // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') {\r\n        return affairs\r\n    }else if ( filter === 'high'){\r\n        return affairs.filter(i=>i.priority === filter)\r\n    }else if ( filter === 'middle'){\r\n        return affairs.filter(i=>i.priority === filter)\r\n    } else if ( filter === 'low'){\r\n        return affairs.filter(i=>i.priority === filter)\r\n    }\r\n    else return []// need to fix\r\n}\r\nexport const deleteAffair = (affairs:  Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(i=> i._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPressHandler: (e:KeyboardEvent<HTMLInputElement>) => void\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, onKeyPressHandler,addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.correct // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} onKeyPress={onKeyPressHandler} className={inputClass}/>\r\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\r\n            <span>{totalUsers}</span>\r\n            <span className={s.error_message}>{error}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport { UserType } from './HW3'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (userName: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === 'Enter'){\r\n            addUser()\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        let nameTrim = name.trim()   \r\n        if(nameTrim){\r\n            addUserCallback(nameTrim)\r\n            setName('')\r\n            setError('')\r\n            alert(`Hello ${nameTrim}!`) // need to fix\r\n        }else{\r\n            setName('')\r\n            setError('You need to enter a name')\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            onKeyPressHandler = {onKeyPressHandler}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport { v1 } from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (userName: string) => { // need to fix any\r\n        let newUser = {_id: v1(), name: userName}\r\n        let newUserList = [...users, newUser]\r\n        setUsers(newUserList) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    className?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${className} ${error ? s.errorInput : s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n        \r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport Error404 from './pages/Error404'\r\nimport PreJunior from './pages/PreJunior'\r\nimport {NavLink, Routes, Route } from 'react-router-dom'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n}\r\n\r\nfunction RoutesFunc() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <NavLink to={'/pre-junior'}>pre-junior</NavLink>\r\n            <Routes>\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\r\n\r\n            <Route path={'/pre-junior'} element={<PreJunior/>}/>\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route element={() => <Error404/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoutesFunc\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport RoutesFunc from './Routes'\r\nimport {HashRouter} from 'react-router-dom'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <RoutesFunc/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport  HW1  from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\nimport HW4 from '../../../p2-homeworks/h4/HW4'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/* <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/> */}\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}